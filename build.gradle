buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

plugins {
    id 'com.matthewprenger.cursegradle' version '1.4.0'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'signing'

version = "1.15.2-1.16.1-2.0.5"

def fileVersion = "2.0.5"

group = 'de.pt400c.noitemdespawn'
archivesBaseName = 'NoItemDespawn'

def forge_version = "28.2.3"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {

    mappings channel: 'snapshot', version: '20200514-1.15.1'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/')

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
    
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.15.2-31.2.5'
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'

        expand 'version': fileVersion, 'forge_version': forge_version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/mods.toml'
    }
}

jar {
	exclude('net/**') 
    manifest {
        attributes([
            "Specification-Title": "NoItemDespawn",
            "Specification-Vendor": "Jomcraft Network",
            "Specification-Version": fileVersion,
            "Implementation-Title": "NoItemDespawn",
            "Implementation-Version": fileVersion,
            "Implementation-Vendor" : "Jomcraft Network",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

task sourcesJar(type: Jar) {
	exclude('net/**') 
	from sourceSets.main.allSource
	classifier = 'sources'
}

task deobfJar(type: Jar) {
	exclude('net/**') 
	from sourceSets.main.output
	classifier = 'deobf'
}

artifacts {
	archives jar
	archives sourcesJar
	archives deobfJar
}

jar.finalizedBy('reobfJar')

curseforge {

  if(project.hasProperty("cursegradle.api_token") && project.property("cursegradle.api_token") != null && !project.property("cursegradle.api_token").equals("")) {
  	apiKey = project.property("cursegradle.api_token")
  	project {
    	id = '285764'
    	releaseType = 'release'
    	addGameVersion '1.16.1'
    	addGameVersion '1.15.2'
    	addGameVersion '1.15.1'
    	addGameVersion '1.15'

    	mainArtifact(jar) {
    		displayName = "$archivesBaseName-$version"
    	}
    
    	addArtifact (sourcesJar) {
    		releaseType = 'release'
    		displayName = "$archivesBaseName-$version-sources"
    	}
    
    	addArtifact (deobfJar) {
    		releaseType = 'release'
    		displayName = "$archivesBaseName-$version-deobf"
    	}
    
  	}
  }
}